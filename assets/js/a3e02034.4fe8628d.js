"use strict";(self.webpackChunkbabylon=self.webpackChunkbabylon||[]).push([[588],{89:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var a=t(7462),i=(t(7294),t(3905));const l={sidebar_label:"Building a Chain using Babylon",sidebar_position:1,pagination_prev:null,pagination_next:null,custom_edit_url:null},o=void 0,s={unversionedId:"chainbuilding",id:"chainbuilding",title:"chainbuilding",description:"Requirements",source:"@site/docs/chainbuilding.md",sourceDirName:".",slug:"/chainbuilding",permalink:"/Docusaurus-sample-docs/chainbuilding",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Building a Chain using Babylon",sidebar_position:1,pagination_prev:null,pagination_next:null,custom_edit_url:null},sidebar:"tutorialSidebar"},r={},d=[{value:"Requirements",id:"requirements",level:2},{value:"Development requirements",id:"development-requirements",level:2},{value:"Building",id:"building",level:2},{value:"Installing",id:"installing",level:2},{value:"Testing",id:"testing",level:2},{value:"Running a node",id:"running-a-node",level:2},{value:"Generating the node configuration",id:"generating-the-node-configuration",level:3},{value:"Running the node",id:"running-the-node",level:3},{value:"Logs",id:"logs",level:3},{value:"Performing queries",id:"performing-queries",level:3},{value:"Submitting transactions",id:"submitting-transactions",level:3},{value:"Running a multi-node testnet",id:"running-a-multi-node-testnet",level:2}],u={toc:d};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go 1.18")),(0,i.kt)("h2",{id:"development-requirements"},"Development requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Go 1.18"),(0,i.kt)("li",{parentName:"ul"},"Docker")),(0,i.kt)("h2",{id:"building"},"Building"),(0,i.kt)("p",null,"To build the chain, simply:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"make build\n")),(0,i.kt)("p",null,"This will lead to the creation of a ",(0,i.kt)("inlineCode",{parentName:"p"},"babylond")," executable under the ",(0,i.kt)("inlineCode",{parentName:"p"},"build"),"\ndirectory."),(0,i.kt)("h2",{id:"installing"},"Installing"),(0,i.kt)("p",null,"To build the chain and install a babylon executable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"make install\n")),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"make test\n")),(0,i.kt)("h2",{id:"running-a-node"},"Running a node"),(0,i.kt)("p",null,"The following commands assume that the ",(0,i.kt)("inlineCode",{parentName:"p"},"babylond")," executable has been\ninstalled. If the repository was only built, then ",(0,i.kt)("inlineCode",{parentName:"p"},"./build/babylond")," should be\nused in its place."),(0,i.kt)("h3",{id:"generating-the-node-configuration"},"Generating the node configuration"),(0,i.kt)("p",null,"The configuration for a single node can be created through the ",(0,i.kt)("inlineCode",{parentName:"p"},"testnet"),"\ncommand. While the testnet command can create an arbitrary number of nodes that\ncommunicate on a testnet, here we focus on the setup of a single node."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"babylond testnet \\\n    --v                     1 \\\n    --output-dir            ./.testnet \\\n    --starting-ip-address   192.168.10.2 \\\n    --keyring-backend       test \\\n    --chain-id              chain-test\n")),(0,i.kt)("p",null,"The flags specify the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--output-dir <testnet-dir>"),": Specifies that the testnet files should\nreside under this directory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--v <N>"),": Leads to the creation of ",(0,i.kt)("inlineCode",{parentName:"li"},"N")," nodes, each one residing under the\n",(0,i.kt)("inlineCode",{parentName:"li"},"<testnet-dir>/node{i}"),". In this case ",(0,i.kt)("inlineCode",{parentName:"li"},"i={0..N-1}"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--starting-ip-address <ip>"),": Specifies the IP address for the nodes. For example,\n",(0,i.kt)("inlineCode",{parentName:"li"},"192.168.10.2")," leads to the first node running on ",(0,i.kt)("inlineCode",{parentName:"li"},"192.168.10.2:46656"),", the\nsecond one on ",(0,i.kt)("inlineCode",{parentName:"li"},"192.168.10.3:46656")," etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--keyring-backend {os,file,test}"),": Specifies the backend to use for the keyring. Available\nchoices include ",(0,i.kt)("inlineCode",{parentName:"li"},"os"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"file"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"test"),". We use ",(0,i.kt)("inlineCode",{parentName:"li"},"test")," for convenience."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--chain-id"),": An identifier for the chain. Useful when perrforming operations\nlater.")),(0,i.kt)("p",null,"In this case, we generated a single node. If we take a look under ",(0,i.kt)("inlineCode",{parentName:"p"},".testnet"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ ls .testnet\ngentxs node0\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"gentxs")," directory contains the genesis transactions. It contains\ntransactions that assign bbn tokens to a single address that is defined for each\nnode."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"node0")," directory contains the the following,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ ls .testnet/node0/babylond\nconfig        data          key_seed.json keyring-test\n")),(0,i.kt)("p",null,"A brief description of the contents:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"config"),": Contains the configuration files for the node."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data"),": Contains the database storage for the node."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"key_seed.json"),": Seed to generate the keys maintained by the keyring."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"keyring-test"),": Contains the test keyring. This directory was created because\nwe provided the ",(0,i.kt)("inlineCode",{parentName:"li"},"--keyring-backend test")," flag. The ",(0,i.kt)("inlineCode",{parentName:"li"},"testnet")," command, creates\na validator node named ",(0,i.kt)("inlineCode",{parentName:"li"},"node{i}")," (depends on the node name), and assigns\nbbn tokens to it through a transaction written to ",(0,i.kt)("inlineCode",{parentName:"li"},".testnet/gentxs/node{i}.json"),".\nThe keys for this node can be pointed to by the ",(0,i.kt)("inlineCode",{parentName:"li"},"node{i}")," name.")),(0,i.kt)("h3",{id:"running-the-node"},"Running the node"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"babylond start --home ./.testnet/node0/babylond \n")),(0,i.kt)("h3",{id:"logs"},"Logs"),(0,i.kt)("p",null,"The logs for a particular node can be found under\n",(0,i.kt)("inlineCode",{parentName:"p"},".testnets/node{id}/babylond/babylond.log"),"."),(0,i.kt)("h3",{id:"performing-queries"},"Performing queries"),(0,i.kt)("p",null,"After building a node and starting it, you can perform queries."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"babylond --home .testnet/node{i}/babylond/ --chain-id <chain-id> \\\n    query <module-name> <query-name>\n")),(0,i.kt)("p",null,"For example, in order to get the hashes maintained by the ",(0,i.kt)("inlineCode",{parentName:"p"},"btcligthclient"),"\nmodule:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},'$ babylond --home .testnet/node0/babylond/ --chain-id chain-test query btclightclient hashes\n\nhashes:\n- 00000000000000000002bf1c218853bc920f41f74491e6c92c6bc6fdc881ab47\npagination:\n  next_key: null\n  total: "1"\n')),(0,i.kt)("h3",{id:"submitting-transactions"},"Submitting transactions"),(0,i.kt)("p",null,"After building a node and running it, one can send transactions as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"babylond --home .testnet/node{i}/babylond --chain-id <chain-id> \\\n         --keyring-backend {os,file,test} --fees <amount><denom> \\\n         --from <key-name> --broadcast-mode {sync,async,block} \\\n         tx <module-name> <tx-name> [data]\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"--fees")," flag specifies the amount of fees that we are willing to pay and\nthe denomination and the ",(0,i.kt)("inlineCode",{parentName:"p"},"--from")," flag denotes the name of the key that we want\nto use to sign the transaction (i.e. from which account we want this\ntransaction to happen). The ",(0,i.kt)("inlineCode",{parentName:"p"},"--broadcast-mode")," specifies how long we want to\nwait until we receive a response from the CLI: ",(0,i.kt)("inlineCode",{parentName:"p"},"async")," means immediately,\n",(0,i.kt)("inlineCode",{parentName:"p"},"sync")," means after the transaction has been validated through ",(0,i.kt)("inlineCode",{parentName:"p"},"CheckTx"),",\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"block")," means after the transaction has been processed by the next block."),(0,i.kt)("p",null,"For example, in the ",(0,i.kt)("inlineCode",{parentName:"p"},"btclightclient")," module, in order\nto submit a header, one should:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"babylond --home .testnet/node0/babylond --chain-id chain-test \\\n         --keyring-backend test --fees 100bbn \\\n         --from node0 --broadcast-mode block \\\n         tx btclightclient insert-header <header-hex>\n")),(0,i.kt)("h2",{id:"running-a-multi-node-testnet"},"Running a multi-node testnet"),(0,i.kt)("p",null,"We provide support for running a multi-node testnet using Docker. To build it"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"make localnet-start\n")),(0,i.kt)("p",null,"The corresponding node directories can be found under ",(0,i.kt)("inlineCode",{parentName:"p"},".testnets")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"$ ls .testnets\ngentxs node0 node1 node2 node3\n")))}c.isMDXComponent=!0}}]);